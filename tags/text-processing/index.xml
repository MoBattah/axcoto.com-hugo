<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Text Processing on My New Hugo Site</title>
    <link>http://axcoto.com/tags/text-processing/index.xml</link>
    <description>Recent content in Text Processing on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://axcoto.com/tags/text-processing/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>10x faster method to remove dup lines</title>
      <link>http://axcoto.com/notes/fastest-method-to-remove-dup-lines/</link>
      <pubDate>Thu, 27 Apr 2017 12:19:23 -0700</pubDate>
      
      <guid>http://axcoto.com/notes/fastest-method-to-remove-dup-lines/</guid>
      <description>&lt;p&gt;Whenever talking about removing duplicate line, I always use a
combination of &lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;uniq&lt;/code&gt; like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;wc -l source.csv
10941092 source.csv

time sort -u source.csv | uniq &amp;gt; source_standarize.csv
real0m50126s
user0m40.104s
sys0m0.944s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However, today I learn a new trick which is 10x faster using awk:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;time awk &#39;!a[$0]++&#39; source.csv

real0m9.400s
user0m5.336s
sys0m0.240s
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So 10x faster. Let&amp;rsquo;s see how this trick works&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;awk &#39;1&#39; file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1 evaluates to true, and will return everything.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;awk &#39;0&#39; file
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will return nothing.&lt;/p&gt;

&lt;p&gt;awk goes over line by line, evaluate and the result, if it&amp;rsquo;s true, it
print out. so look at &lt;code&gt;!a[$0]++&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt; is just an varaible that we declate and use.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a[$0]&lt;/code&gt;: $0 is whole line, so we create an hash, with the line text as
key&lt;/li&gt;
&lt;li&gt;a[$0]++ will incrase the value to 1&lt;/li&gt;
&lt;li&gt;First time a line appear, &lt;code&gt;a[$0]&lt;/code&gt; return 0. Hence &lt;code&gt;!0&lt;/code&gt;-&amp;gt; true.&lt;/li&gt;
&lt;li&gt;Second time a line appear, &lt;code&gt;a[$0]&lt;/code&gt; is already 2, and will increaseing.
&lt;code&gt;!2&lt;/code&gt; -&amp;gt; false&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hence &lt;code&gt;awk&lt;/code&gt; will not print out that.
So basically this is an giant hash map&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>awk tip</title>
      <link>http://axcoto.com/notes/awk-tip/</link>
      <pubDate>Sun, 23 Apr 2017 12:23:34 -0700</pubDate>
      
      <guid>http://axcoto.com/notes/awk-tip/</guid>
      <description>&lt;p&gt;AWK is a powerful tool to process text data. In it, we can do control
structure, repeat&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>